(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{713:function(e,n,r){"use strict";r.r(n);r(674),r(30),r(8),r(41),r(676),r(680),r(681),r(682),r(684),r(685),r(686),r(687),r(688),r(689),r(690),r(691),r(692),r(693),r(694),r(696),r(697),r(698),r(699),r(700),r(701),r(702),r(703),r(704),r(705),r(706),r(42),r(545);var t=r(33),o=r(34),canvas=document.getElementById("canvas");canvas.width=canvas.clientWidth,canvas.height=canvas.clientHeight;var v={SIM_RESOLUTION:128,DYE_RESOLUTION:512,DENSITY_DISSIPATION:.97,VELOCITY_DISSIPATION:.98,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.5,SHADING:!0,COLORFUL:!0,PAUSED:!1,BACK_COLOR:{r:255,g:255,b:255},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7};function f(){this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}var m=[],c=[],l=[];m.push(new f);var h=function(canvas){var e,n,r={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},t=canvas.getContext("webgl2",r),o=!!t;o||(t=canvas.getContext("webgl",r)||canvas.getContext("experimental-webgl",r));o?(t.getExtension("EXT_color_buffer_float"),n=t.getExtension("OES_texture_float_linear")):(e=t.getExtension("OES_texture_half_float"),n=t.getExtension("OES_texture_half_float_linear"));t.clearColor(0,0,0,1);var v,f,m,c=o?t.HALF_FLOAT:e.HALF_FLOAT_OES;o?(v=E(t,t.RGBA16F,t.RGBA,c),f=E(t,t.RG16F,t.RG,c),m=E(t,t.R16F,t.RED,c)):(v=E(t,t.RGBA,t.RGBA,c),f=E(t,t.RGBA,t.RGBA,c),m=E(t,t.RGBA,t.RGBA,c));return{gl:t,ext:{formatRGBA:v,formatRG:f,formatR:m,halfFloatTexType:c,supportLinearFiltering:n}}}(canvas),T=h.gl,d=h.ext;function E(e,n,r,t){if(!function(e,n,r,t){var o=e.createTexture();e.bindTexture(e.TEXTURE_2D,o),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,r,t,null);var v=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,v),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,o,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,n,r,t))switch(n){case e.R16F:return E(e,e.RG16F,e.RG,t);case e.RG16F:return E(e,e.RGBA16F,e.RGBA,t);default:return null}return{internalFormat:n,format:r}}/Mobi|Android/i.test(navigator.userAgent)&&(v.SHADING=!1),d.supportLinearFiltering||(v.SHADING=!1,v.BLOOM=!1);var x=function(){function e(n,r){if(Object(t.a)(this,e),this.uniforms={},this.program=T.createProgram(),T.attachShader(this.program,n),T.attachShader(this.program,r),T.linkProgram(this.program),!T.getProgramParameter(this.program,T.LINK_STATUS))throw T.getProgramInfoLog(this.program);for(var o=T.getProgramParameter(this.program,T.ACTIVE_UNIFORMS),i=0;i<o;i++){var v=T.getActiveUniform(this.program,i).name;this.uniforms[v]=T.getUniformLocation(this.program,v)}}return Object(o.a)(e,[{key:"bind",value:function(){T.useProgram(this.program)}}]),e}();function R(e,source){var n=T.createShader(e);if(T.shaderSource(n,source),T.compileShader(n),!T.getShaderParameter(n,T.COMPILE_STATUS))throw T.getShaderInfoLog(n);return n}var D,_,y,A,S,L,U,F,w,B,O=R(T.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),N=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),C=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),I=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),M=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),P=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),G=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform vec2 texelSize;\n\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C.rgb *= diffuse;\n\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),X=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C *= diffuse;\n\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),H=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),z=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),V=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),Y=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),W=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n        gl_FragColor.a = 1.0;\n    }\n"),k=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    void main () {\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        gl_FragColor = dissipation * texture2D(uSource, coord);\n        gl_FragColor.a = 1.0;\n    }\n"),K=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),j=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),J=R(T.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),Q=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uncomment if you use wrap or repeat texture mode\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),Z=R(T.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),$=(T.bindBuffer(T.ARRAY_BUFFER,T.createBuffer()),T.bufferData(T.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),T.STATIC_DRAW),T.bindBuffer(T.ELEMENT_ARRAY_BUFFER,T.createBuffer()),T.bufferData(T.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),T.STATIC_DRAW),T.vertexAttribPointer(0,2,T.FLOAT,!1,0,0),T.enableVertexAttribArray(0),function(e){T.bindFramebuffer(T.FRAMEBUFFER,e),T.drawElements(T.TRIANGLES,6,T.UNSIGNED_SHORT,0)}),ee=function(){var e=T.createTexture();T.bindTexture(T.TEXTURE_2D,e),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MIN_FILTER,T.LINEAR),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MAG_FILTER,T.LINEAR),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_S,T.REPEAT),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_T,T.REPEAT),T.texImage2D(T.TEXTURE_2D,0,T.RGB,1,1,0,T.RGB,T.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var n={texture:e,width:1,height:1,attach:function(n){return T.activeTexture(T.TEXTURE0+n),T.bindTexture(T.TEXTURE_2D,e),n}},image=new Image;return image.onload=function(){n.width=image.width,n.height=image.height,T.bindTexture(T.TEXTURE_2D,e),T.texImage2D(T.TEXTURE_2D,0,T.RGB,T.RGB,T.UNSIGNED_BYTE,image)},image.src="https://file.calibur.tv/LDR_RGB1_0.png",image.crossOrigin="Anonymous",n}(),ne=new x(O,N),re=new x(O,C),ie=new x(O,I),te=new x(O,M),oe=new x(O,P),ae=new x(O,G),ue=new x(O,X),ve=new x(O,H),fe=new x(O,z),me=new x(O,V),ce=new x(O,Y),le=new x(O,d.supportLinearFiltering?k:W),se=new x(O,K),ge=new x(O,j),he=new x(O,J),Te=new x(O,Q),de=new x(O,Z);function Ee(){var e=be(v.SIM_RESOLUTION),n=be(v.DYE_RESOLUTION);D=e.width,_=e.height,y=n.width,A=n.height;var r=d.halfFloatTexType,t=d.formatRGBA,o=d.formatRG,f=d.formatR,m=d.supportLinearFiltering?T.LINEAR:T.NEAREST;S=null==S?Re(y,A,t.internalFormat,t.format,r,m):pe(S,y,A,t.internalFormat,t.format,r,m),L=null==L?Re(D,_,o.internalFormat,o.format,r,m):pe(L,D,_,o.internalFormat,o.format,r,m),U=xe(D,_,f.internalFormat,f.format,r,T.NEAREST),F=xe(D,_,f.internalFormat,f.format,r,T.NEAREST),w=Re(D,_,f.internalFormat,f.format,r,T.NEAREST),function(){var e=be(v.BLOOM_RESOLUTION),n=d.halfFloatTexType,r=d.formatRGBA,t=d.supportLinearFiltering?T.LINEAR:T.NEAREST;B=xe(e.width,e.height,r.internalFormat,r.format,n,t),l.length=0;for(var i=0;i<v.BLOOM_ITERATIONS;i++){var o=e.width>>i+1,f=e.height>>i+1;if(o<2||f<2)break;var m=xe(o,f,r.internalFormat,r.format,n,t);l.push(m)}}()}function xe(e,n,r,t,o,param){T.activeTexture(T.TEXTURE0);var v=T.createTexture();T.bindTexture(T.TEXTURE_2D,v),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MIN_FILTER,param),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_MAG_FILTER,param),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_S,T.CLAMP_TO_EDGE),T.texParameteri(T.TEXTURE_2D,T.TEXTURE_WRAP_T,T.CLAMP_TO_EDGE),T.texImage2D(T.TEXTURE_2D,0,r,e,n,0,t,o,null);var f=T.createFramebuffer();return T.bindFramebuffer(T.FRAMEBUFFER,f),T.framebufferTexture2D(T.FRAMEBUFFER,T.COLOR_ATTACHMENT0,T.TEXTURE_2D,v,0),T.viewport(0,0,e,n),T.clear(T.COLOR_BUFFER_BIT),{texture:v,fbo:f,width:e,height:n,attach:function(e){return T.activeTexture(T.TEXTURE0+e),T.bindTexture(T.TEXTURE_2D,v),e}}}function Re(e,n,r,t,o,param){var v=xe(e,n,r,t,o,param),f=xe(e,n,r,t,o,param);return{get read(){return v},set read(e){v=e},get write(){return f},set write(e){f=e},swap:function(){var e=v;v=f,f=e}}}function pe(e,n,r,t,o,v,param){return e.read=function(e,n,r,t,o,v,param){var f=xe(n,r,t,o,v,param);return ne.bind(),T.uniform1i(ne.uniforms.uTexture,e.attach(0)),T.uniform1f(ne.uniforms.value,1),$(f.fbo),f}(e.read,n,r,t,o,v,param),e.write=xe(n,r,t,o,v,param),e}Ee(),Ae(parseInt(20*Math.random())+5);var De=Date.now();function _e(e){v.BLOOM&&function(source,e){if(l.length<2)return;var n=e;T.disable(T.BLEND),ve.bind();var r=v.BLOOM_THRESHOLD*v.BLOOM_SOFT_KNEE+1e-4,t=v.BLOOM_THRESHOLD-r,o=2*r,f=.25/r;T.uniform3f(ve.uniforms.curve,t,o,f),T.uniform1f(ve.uniforms.threshold,v.BLOOM_THRESHOLD),T.uniform1i(ve.uniforms.uTexture,source.attach(0)),T.viewport(0,0,n.width,n.height),$(n.fbo),fe.bind();for(var i=0;i<l.length;i++){var m=l[i];T.uniform2f(fe.uniforms.texelSize,1/n.width,1/n.height),T.uniform1i(fe.uniforms.uTexture,n.attach(0)),T.viewport(0,0,m.width,m.height),$(m.fbo),n=m}T.blendFunc(T.ONE,T.ONE),T.enable(T.BLEND);for(var c=l.length-2;c>=0;c--){var h=l[c];T.uniform2f(fe.uniforms.texelSize,1/n.width,1/n.height),T.uniform1i(fe.uniforms.uTexture,n.attach(0)),T.viewport(0,0,h.width,h.height),$(h.fbo),n=h}T.disable(T.BLEND),me.bind(),T.uniform2f(me.uniforms.texelSize,1/n.width,1/n.height),T.uniform1i(me.uniforms.uTexture,n.attach(0)),T.uniform1f(me.uniforms.intensity,v.BLOOM_INTENSITY),T.viewport(0,0,e.width,e.height),$(e.fbo)}(S.read,B),null!=e&&v.TRANSPARENT?T.disable(T.BLEND):(T.blendFunc(T.ONE,T.ONE_MINUS_SRC_ALPHA),T.enable(T.BLEND));var n=null==e?T.drawingBufferWidth:y,r=null==e?T.drawingBufferHeight:A;if(T.viewport(0,0,n,r),!v.TRANSPARENT){re.bind();var t=v.BACK_COLOR;T.uniform4f(re.uniforms.color,t.r/255,t.g/255,t.b/255,1),$(e)}if(null==e&&v.TRANSPARENT&&(ie.bind(),T.uniform1f(ie.uniforms.aspectRatio,canvas.width/canvas.height),$(null)),v.SHADING){var o=v.BLOOM?ue:ae;if(o.bind(),T.uniform2f(o.uniforms.texelSize,1/n,1/r),T.uniform1i(o.uniforms.uTexture,S.read.attach(0)),v.BLOOM){T.uniform1i(o.uniforms.uBloom,B.attach(1)),T.uniform1i(o.uniforms.uDithering,ee.attach(2));var f=Le(ee,n,r);T.uniform2f(o.uniforms.ditherScale,f.x,f.y)}}else{var m=v.BLOOM?oe:te;if(m.bind(),T.uniform1i(m.uniforms.uTexture,S.read.attach(0)),v.BLOOM){T.uniform1i(m.uniforms.uBloom,B.attach(1)),T.uniform1i(m.uniforms.uDithering,ee.attach(2));var c=Le(ee,n,r);T.uniform2f(m.uniforms.ditherScale,c.x,c.y)}}$(e)}function ye(e,n,r,t,o){T.viewport(0,0,D,_),ce.bind(),T.uniform1i(ce.uniforms.uTarget,L.read.attach(0)),T.uniform1f(ce.uniforms.aspectRatio,canvas.width/canvas.height),T.uniform2f(ce.uniforms.point,e/canvas.width,1-n/canvas.height),T.uniform3f(ce.uniforms.color,r,-t,1),T.uniform1f(ce.uniforms.radius,v.SPLAT_RADIUS/100),$(L.write.fbo),L.swap(),T.viewport(0,0,y,A),T.uniform1i(ce.uniforms.uTarget,S.read.attach(0)),T.uniform3f(ce.uniforms.color,o.r,o.g,o.b),$(S.write.fbo),S.swap()}function Ae(e){for(var i=0;i<e;i++){var n=Se();n.r*=10,n.g*=10,n.b*=10,ye(canvas.width*Math.random(),canvas.height*Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),n)}}function Se(){var e=function(e,s,n){var r,g,b,i,t,p,q,o;switch(i=Math.floor(6*e),p=n*(1-s),q=n*(1-(t=6*e-i)*s),o=n*(1-(1-t)*s),i%6){case 0:r=n,g=o,b=p;break;case 1:r=q,g=n,b=p;break;case 2:r=p,g=n,b=o;break;case 3:r=p,g=q,b=n;break;case 4:r=o,g=p,b=n;break;case 5:r=n,g=p,b=q}return{r:r,g:g,b:b}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function be(e){var n=T.drawingBufferWidth/T.drawingBufferHeight;n<1&&(n=1/n);var r=Math.round(e*n),t=Math.round(e);return T.drawingBufferWidth>T.drawingBufferHeight?{width:r,height:t}:{width:t,height:r}}function Le(e,n,r){return{x:n/e.width,y:r/e.height}}!function e(){canvas.width==canvas.clientWidth&&canvas.height==canvas.clientHeight||(canvas.width=canvas.clientWidth,canvas.height=canvas.clientHeight,Ee()),function(){c.length>0&&Ae(c.pop());for(var i=0;i<m.length;i++){var p=m[i];p.moved&&(ye(p.x,p.y,p.dx,p.dy,p.color),p.moved=!1)}if(!v.COLORFUL)return;if(De+100<Date.now()){De=Date.now();for(var e=0;e<m.length;e++){m[e].color=Se()}}}(),v.PAUSED||function(dt){T.disable(T.BLEND),T.viewport(0,0,D,_),ge.bind(),T.uniform2f(ge.uniforms.texelSize,1/D,1/_),T.uniform1i(ge.uniforms.uVelocity,L.read.attach(0)),$(F.fbo),he.bind(),T.uniform2f(he.uniforms.texelSize,1/D,1/_),T.uniform1i(he.uniforms.uVelocity,L.read.attach(0)),T.uniform1i(he.uniforms.uCurl,F.attach(1)),T.uniform1f(he.uniforms.curl,v.CURL),T.uniform1f(he.uniforms.dt,dt),$(L.write.fbo),L.swap(),se.bind(),T.uniform2f(se.uniforms.texelSize,1/D,1/_),T.uniform1i(se.uniforms.uVelocity,L.read.attach(0)),$(U.fbo),ne.bind(),T.uniform1i(ne.uniforms.uTexture,w.read.attach(0)),T.uniform1f(ne.uniforms.value,v.PRESSURE_DISSIPATION),$(w.write.fbo),w.swap(),Te.bind(),T.uniform2f(Te.uniforms.texelSize,1/D,1/_),T.uniform1i(Te.uniforms.uDivergence,U.attach(0));for(var i=0;i<v.PRESSURE_ITERATIONS;i++)T.uniform1i(Te.uniforms.uPressure,w.read.attach(1)),$(w.write.fbo),w.swap();de.bind(),T.uniform2f(de.uniforms.texelSize,1/D,1/_),T.uniform1i(de.uniforms.uPressure,w.read.attach(0)),T.uniform1i(de.uniforms.uVelocity,L.read.attach(1)),$(L.write.fbo),L.swap(),le.bind(),T.uniform2f(le.uniforms.texelSize,1/D,1/_),d.supportLinearFiltering||T.uniform2f(le.uniforms.dyeTexelSize,1/D,1/_);var e=L.read.attach(0);T.uniform1i(le.uniforms.uVelocity,e),T.uniform1i(le.uniforms.uSource,e),T.uniform1f(le.uniforms.dt,dt),T.uniform1f(le.uniforms.dissipation,v.VELOCITY_DISSIPATION),$(L.write.fbo),L.swap(),T.viewport(0,0,y,A),d.supportLinearFiltering||T.uniform2f(le.uniforms.dyeTexelSize,1/y,1/A);T.uniform1i(le.uniforms.uVelocity,L.read.attach(0)),T.uniform1i(le.uniforms.uSource,S.read.attach(1)),T.uniform1f(le.uniforms.dissipation,v.DENSITY_DISSIPATION),$(S.write.fbo),S.swap()}(.016);_e(null),requestAnimationFrame(e)}(),canvas.addEventListener("mousemove",(function(e){m[0].moved=m[0].down,m[0].dx=5*(e.offsetX-m[0].x),m[0].dy=5*(e.offsetY-m[0].y),m[0].x=e.offsetX,m[0].y=e.offsetY})),canvas.addEventListener("touchmove",(function(e){e.preventDefault();for(var n=e.targetTouches,i=0;i<n.length;i++){var r=m[i];r.moved=r.down,r.dx=8*(n[i].pageX-r.x),r.dy=8*(n[i].pageY-r.y),r.x=n[i].pageX,r.y=n[i].pageY}}),!1),canvas.addEventListener("mousedown",(function(){m[0].down=!0,m[0].color=Se()})),canvas.addEventListener("touchstart",(function(e){e.preventDefault();for(var n=e.targetTouches,i=0;i<n.length;i++)i>=m.length&&m.push(new f),m[i].id=n[i].identifier,m[i].down=!0,m[i].x=n[i].pageX,m[i].y=n[i].pageY,m[i].color=Se()})),window.addEventListener("mouseup",(function(){m[0].down=!1})),window.addEventListener("touchend",(function(e){for(var n=e.changedTouches,i=0;i<n.length;i++)for(var r=0;r<m.length;r++)n[i].identifier==m[r].id&&(m[r].down=!1)})),window.addEventListener("keydown",(function(e){"KeyP"===e.code&&(v.PAUSED=!v.PAUSED)," "===e.key&&c.push(parseInt(20*Math.random())+5)}))}}]);